
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BOOL_LITERAL CONST FLOAT_LITERAL IDENTIFIER INT_LITERAL SEMICOLON STRING_LITERAL TYPE\n    declaration : variable_decl\n                | constant_decl\n    \n    variable_decl : TYPE IDENTIFIER SEMICOLON\n                  | TYPE IDENTIFIER ASSIGN literal SEMICOLON\n    \n    constant_decl : CONST TYPE IDENTIFIER ASSIGN literal SEMICOLON\n    \n    literal : INT_LITERAL\n            | FLOAT_LITERAL\n            | STRING_LITERAL\n            | BOOL_LITERAL\n    '
    
_lr_action_items = {'TYPE':([0,5,],[4,7,]),'CONST':([0,],[5,]),'$end':([1,2,3,8,17,19,],[0,-1,-2,-3,-4,-5,]),'IDENTIFIER':([4,7,],[6,10,]),'SEMICOLON':([6,11,12,13,14,15,18,],[8,17,-6,-7,-8,-9,19,]),'ASSIGN':([6,10,],[9,16,]),'INT_LITERAL':([9,16,],[12,12,]),'FLOAT_LITERAL':([9,16,],[13,13,]),'STRING_LITERAL':([9,16,],[14,14,]),'BOOL_LITERAL':([9,16,],[15,15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaration':([0,],[1,]),'variable_decl':([0,],[2,]),'constant_decl':([0,],[3,]),'literal':([9,16,],[11,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaration","S'",1,None,None,None),
  ('declaration -> variable_decl','declaration',1,'p_declaration','parser.py',6),
  ('declaration -> constant_decl','declaration',1,'p_declaration','parser.py',7),
  ('variable_decl -> TYPE IDENTIFIER SEMICOLON','variable_decl',3,'p_variable_decl','parser.py',13),
  ('variable_decl -> TYPE IDENTIFIER ASSIGN literal SEMICOLON','variable_decl',5,'p_variable_decl','parser.py',14),
  ('constant_decl -> CONST TYPE IDENTIFIER ASSIGN literal SEMICOLON','constant_decl',6,'p_constant_decl','parser.py',20),
  ('literal -> INT_LITERAL','literal',1,'p_literal','parser.py',26),
  ('literal -> FLOAT_LITERAL','literal',1,'p_literal','parser.py',27),
  ('literal -> STRING_LITERAL','literal',1,'p_literal','parser.py',28),
  ('literal -> BOOL_LITERAL','literal',1,'p_literal','parser.py',29),
]
