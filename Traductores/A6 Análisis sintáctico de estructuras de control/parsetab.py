
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ELSE FOR IDENTIFICADOR IF LLAVEDER LLAVEIZQ MAS MENOS NUMERO PARDER PARIZQ PUNTOYCOMA WHILEestructura_control : sentencia_if\n                          | sentencia_while\n                          | sentencia_forsentencia_if : IF PARIZQ expresion PARDER LLAVEIZQ bloque LLAVEDER\n                    | IF PARIZQ expresion PARDER LLAVEIZQ bloque LLAVEDER ELSE LLAVEIZQ bloque LLAVEDERsentencia_while : WHILE PARIZQ expresion PARDER LLAVEIZQ bloque LLAVEDERsentencia_for : FOR PARIZQ asignacion PUNTOYCOMA expresion PUNTOYCOMA expresion PARDER LLAVEIZQ bloque LLAVEDERbloque : sentencia\n             | bloque sentenciaasignacion : IDENTIFICADOR MAS NUMERO\n                  | IDENTIFICADOR MENOS NUMEROexpresion : IDENTIFICADOR\n                 | NUMEROsentencia : asignacion PUNTOYCOMA'
    
_lr_action_items = {'IF':([0,],[5,]),'WHILE':([0,],[6,]),'FOR':([0,],[7,]),'$end':([1,2,3,4,32,35,43,44,],[0,-1,-2,-3,-4,-6,-5,-7,]),'PARIZQ':([5,6,7,],[8,9,10,]),'IDENTIFICADOR':([8,9,10,19,22,23,27,28,30,31,33,34,39,40,41,42,],[12,12,16,12,16,16,16,-8,16,12,-9,-14,16,16,16,16,]),'NUMERO':([8,9,19,20,21,31,],[13,13,13,25,26,13,]),'PARDER':([11,12,13,14,36,],[17,-12,-13,18,38,]),'PUNTOYCOMA':([12,13,15,24,25,26,29,],[-12,-13,19,31,-10,-11,34,]),'MAS':([16,],[20,]),'MENOS':([16,],[21,]),'LLAVEIZQ':([17,18,37,38,],[22,23,39,40,]),'LLAVEDER':([27,28,30,33,34,41,42,],[32,-8,35,-9,-14,43,44,]),'ELSE':([32,],[37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'estructura_control':([0,],[1,]),'sentencia_if':([0,],[2,]),'sentencia_while':([0,],[3,]),'sentencia_for':([0,],[4,]),'expresion':([8,9,19,31,],[11,14,24,36,]),'asignacion':([10,22,23,27,30,39,40,41,42,],[15,29,29,29,29,29,29,29,29,]),'bloque':([22,23,39,40,],[27,30,41,42,]),'sentencia':([22,23,27,30,39,40,41,42,],[28,28,33,33,28,28,33,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> estructura_control","S'",1,None,None,None),
  ('estructura_control -> sentencia_if','estructura_control',1,'p_estructura_control','lexer.py',37),
  ('estructura_control -> sentencia_while','estructura_control',1,'p_estructura_control','lexer.py',38),
  ('estructura_control -> sentencia_for','estructura_control',1,'p_estructura_control','lexer.py',39),
  ('sentencia_if -> IF PARIZQ expresion PARDER LLAVEIZQ bloque LLAVEDER','sentencia_if',7,'p_sentencia_if','lexer.py',43),
  ('sentencia_if -> IF PARIZQ expresion PARDER LLAVEIZQ bloque LLAVEDER ELSE LLAVEIZQ bloque LLAVEDER','sentencia_if',11,'p_sentencia_if','lexer.py',44),
  ('sentencia_while -> WHILE PARIZQ expresion PARDER LLAVEIZQ bloque LLAVEDER','sentencia_while',7,'p_sentencia_while','lexer.py',51),
  ('sentencia_for -> FOR PARIZQ asignacion PUNTOYCOMA expresion PUNTOYCOMA expresion PARDER LLAVEIZQ bloque LLAVEDER','sentencia_for',11,'p_sentencia_for','lexer.py',55),
  ('bloque -> sentencia','bloque',1,'p_bloque','lexer.py',59),
  ('bloque -> bloque sentencia','bloque',2,'p_bloque','lexer.py',60),
  ('asignacion -> IDENTIFICADOR MAS NUMERO','asignacion',3,'p_asignacion','lexer.py',67),
  ('asignacion -> IDENTIFICADOR MENOS NUMERO','asignacion',3,'p_asignacion','lexer.py',68),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion','lexer.py',72),
  ('expresion -> NUMERO','expresion',1,'p_expresion','lexer.py',73),
  ('sentencia -> asignacion PUNTOYCOMA','sentencia',2,'p_sentencia','lexer.py',77),
]
